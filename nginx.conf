worker_processes auto;

events {
    worker_connections 1024;
}

http {
    #upstream api_backend {
    #    least_conn;
    #    server service_1:8080 max_fails=3 fail_timeout=30s weight=5;
    #}

    server {
        listen 80;
        server_name nginx-scaling-funicular;

        location / {
            #proxy_pass http://api_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;

            # Retry if upstream fails
            proxy_next_upstream error timeout http_502;
            proxy_next_upstream_tries 3;
        }

        location /health {
            access_log off;
            return 200 "healthy\n";
        }
    }
}
